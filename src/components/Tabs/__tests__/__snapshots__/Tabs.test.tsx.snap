// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TabItem component tests active: label 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  testID="TabItem_Container0"
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "rgba(255, 255, 255, 0.0001)",
          "flexDirection": "row",
          "gap": 7,
          "height": 49,
          "paddingHorizontal": 0,
          "paddingVertical": 14,
        },
        false,
        {
          "backgroundColor": "rgba(255, 255, 255, 0.0001)",
        },
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "color": "rgba(0, 0, 0, 0.8000)",
            "fontSize": 14,
            "includeFontPadding": false,
            "verticalAlign": "middle",
          },
          {
            "color": "#188700",
          },
          false,
          undefined,
        ]
      }
    >
      label
    </Text>
  </View>
</View>
`;

exports[`TabItem component tests active: label, badge 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  testID="TabItem_Container0"
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "rgba(255, 255, 255, 0.0001)",
          "flexDirection": "row",
          "gap": 7,
          "height": 49,
          "paddingHorizontal": 0,
          "paddingVertical": 14,
        },
        false,
        {
          "backgroundColor": "rgba(255, 255, 255, 0.0001)",
        },
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "color": "rgba(0, 0, 0, 0.8000)",
            "fontSize": 14,
            "includeFontPadding": false,
            "verticalAlign": "middle",
          },
          {
            "color": "#188700",
          },
          false,
          undefined,
        ]
      }
    >
      label
    </Text>
    <View
      style={
        [
          {
            "alignItems": "flex-start",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          [
            {
              "borderRadius": 100,
              "height": 21,
              "justifyContent": "center",
              "paddingHorizontal": 7,
              "paddingVertical": 0,
            },
            {
              "backgroundColor": "#188700",
            },
          ]
        }
      >
        <Text
          style={
            {
              "color": "#ffffff",
              "fontSize": 10.5,
              "fontWeight": 700,
              "includeFontPadding": false,
              "verticalAlign": "middle",
            }
          }
        >
          99
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`TabItem component tests active: label, icon 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  testID="TabItem_Container0"
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "rgba(255, 255, 255, 0.0001)",
          "flexDirection": "row",
          "gap": 7,
          "height": 49,
          "paddingHorizontal": 0,
          "paddingVertical": 14,
        },
        false,
        {
          "backgroundColor": "rgba(255, 255, 255, 0.0001)",
        },
        undefined,
      ]
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={17.5}
      bbWidth={17.5}
      fill="none"
      focusable={false}
      height={17.5}
      meetOrSlice={0}
      minX={0}
      minY={0}
      stroke="#188700"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          {
            "flex": 0,
            "height": 17,
            "width": 17,
          },
        ]
      }
      vbHeight={24}
      vbWidth={24}
      width={17.5}
      xmlns="http://www.w3.org/2000/svg"
    >
      <RNSVGGroup
        fill={null}
        propList={
          [
            "fill",
            "stroke",
            "strokeWidth",
            "strokeLinecap",
            "strokeLinejoin",
          ]
        }
        stroke={
          {
            "payload": 4279797504,
            "type": 0,
          }
        }
        strokeLinecap={1}
        strokeLinejoin={1}
        strokeWidth={2}
      >
        <RNSVGPath
          d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0"
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 4279797504,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth={2}
        />
        <RNSVGPath
          d="M6 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2"
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 4279797504,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth={2}
        />
      </RNSVGGroup>
    </RNSVGSvgView>
    <Text
      numberOfLines={1}
      style={
        [
          {
            "color": "rgba(0, 0, 0, 0.8000)",
            "fontSize": 14,
            "includeFontPadding": false,
            "verticalAlign": "middle",
          },
          {
            "color": "#188700",
          },
          false,
          undefined,
        ]
      }
    >
      label
    </Text>
  </View>
</View>
`;

exports[`TabItem component tests active: label, icon, badge 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  testID="TabItem_Container0"
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "rgba(255, 255, 255, 0.0001)",
          "flexDirection": "row",
          "gap": 7,
          "height": 49,
          "paddingHorizontal": 0,
          "paddingVertical": 14,
        },
        false,
        {
          "backgroundColor": "rgba(255, 255, 255, 0.0001)",
        },
        undefined,
      ]
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={17.5}
      bbWidth={17.5}
      fill="none"
      focusable={false}
      height={17.5}
      meetOrSlice={0}
      minX={0}
      minY={0}
      stroke="#188700"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          {
            "flex": 0,
            "height": 17,
            "width": 17,
          },
        ]
      }
      vbHeight={24}
      vbWidth={24}
      width={17.5}
      xmlns="http://www.w3.org/2000/svg"
    >
      <RNSVGGroup
        fill={null}
        propList={
          [
            "fill",
            "stroke",
            "strokeWidth",
            "strokeLinecap",
            "strokeLinejoin",
          ]
        }
        stroke={
          {
            "payload": 4279797504,
            "type": 0,
          }
        }
        strokeLinecap={1}
        strokeLinejoin={1}
        strokeWidth={2}
      >
        <RNSVGPath
          d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0"
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 4279797504,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth={2}
        />
        <RNSVGPath
          d="M6 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2"
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 4279797504,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth={2}
        />
      </RNSVGGroup>
    </RNSVGSvgView>
    <Text
      numberOfLines={1}
      style={
        [
          {
            "color": "rgba(0, 0, 0, 0.8000)",
            "fontSize": 14,
            "includeFontPadding": false,
            "verticalAlign": "middle",
          },
          {
            "color": "#188700",
          },
          false,
          undefined,
        ]
      }
    >
      label
    </Text>
    <View
      style={
        [
          {
            "alignItems": "flex-start",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          [
            {
              "borderRadius": 100,
              "height": 21,
              "justifyContent": "center",
              "paddingHorizontal": 7,
              "paddingVertical": 0,
            },
            {
              "backgroundColor": "#188700",
            },
          ]
        }
      >
        <Text
          style={
            {
              "color": "#ffffff",
              "fontSize": 10.5,
              "fontWeight": 700,
              "includeFontPadding": false,
              "verticalAlign": "middle",
            }
          }
        >
          99
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`TabItem component tests disabled + active : label 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  testID="TabItem_Container0"
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "rgba(255, 255, 255, 0.0001)",
          "flexDirection": "row",
          "gap": 7,
          "height": 49,
          "paddingHorizontal": 0,
          "paddingVertical": 14,
        },
        false,
        {
          "backgroundColor": "rgba(255, 255, 255, 0.0001)",
        },
        {
          "opacity": 0.6,
        },
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "color": "rgba(0, 0, 0, 0.8000)",
            "fontSize": 14,
            "includeFontPadding": false,
            "verticalAlign": "middle",
          },
          {
            "color": "#188700",
          },
          false,
          {
            "color": "rgba(0, 0, 0, 0.6000)",
          },
        ]
      }
    >
      label
    </Text>
  </View>
</View>
`;

exports[`TabItem component tests disabled: label 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  testID="TabItem_Container0"
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "rgba(255, 255, 255, 0.0001)",
          "flexDirection": "row",
          "gap": 7,
          "height": 49,
          "paddingHorizontal": 0,
          "paddingVertical": 14,
        },
        false,
        undefined,
        {
          "opacity": 0.6,
        },
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "color": "rgba(0, 0, 0, 0.8000)",
            "fontSize": 14,
            "includeFontPadding": false,
            "verticalAlign": "middle",
          },
          undefined,
          false,
          {
            "color": "rgba(0, 0, 0, 0.6000)",
          },
        ]
      }
    >
      label
    </Text>
  </View>
</View>
`;

exports[`TabItem component tests disabled: label, badge 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  testID="TabItem_Container0"
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "rgba(255, 255, 255, 0.0001)",
          "flexDirection": "row",
          "gap": 7,
          "height": 49,
          "paddingHorizontal": 0,
          "paddingVertical": 14,
        },
        false,
        undefined,
        {
          "opacity": 0.6,
        },
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "color": "rgba(0, 0, 0, 0.8000)",
            "fontSize": 14,
            "includeFontPadding": false,
            "verticalAlign": "middle",
          },
          undefined,
          false,
          {
            "color": "rgba(0, 0, 0, 0.6000)",
          },
        ]
      }
    >
      label
    </Text>
    <View
      style={
        [
          {
            "alignItems": "flex-start",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          [
            {
              "borderRadius": 100,
              "height": 21,
              "justifyContent": "center",
              "paddingHorizontal": 7,
              "paddingVertical": 0,
            },
            {
              "backgroundColor": "#188700",
            },
          ]
        }
      >
        <Text
          style={
            {
              "color": "#ffffff",
              "fontSize": 10.5,
              "fontWeight": 700,
              "includeFontPadding": false,
              "verticalAlign": "middle",
            }
          }
        >
          99
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`TabItem component tests disabled: label, icon 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  testID="TabItem_Container0"
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "rgba(255, 255, 255, 0.0001)",
          "flexDirection": "row",
          "gap": 7,
          "height": 49,
          "paddingHorizontal": 0,
          "paddingVertical": 14,
        },
        false,
        undefined,
        {
          "opacity": 0.6,
        },
      ]
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={17.5}
      bbWidth={17.5}
      fill="none"
      focusable={false}
      height={17.5}
      meetOrSlice={0}
      minX={0}
      minY={0}
      stroke="rgba(0, 0, 0, 0.6000)"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          {
            "flex": 0,
            "height": 17,
            "width": 17,
          },
        ]
      }
      vbHeight={24}
      vbWidth={24}
      width={17.5}
      xmlns="http://www.w3.org/2000/svg"
    >
      <RNSVGGroup
        fill={null}
        propList={
          [
            "fill",
            "stroke",
            "strokeWidth",
            "strokeLinecap",
            "strokeLinejoin",
          ]
        }
        stroke={
          {
            "payload": 2566914048,
            "type": 0,
          }
        }
        strokeLinecap={1}
        strokeLinejoin={1}
        strokeWidth={2}
      >
        <RNSVGPath
          d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0"
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 2566914048,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth={2}
        />
        <RNSVGPath
          d="M6 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2"
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 2566914048,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth={2}
        />
      </RNSVGGroup>
    </RNSVGSvgView>
    <Text
      numberOfLines={1}
      style={
        [
          {
            "color": "rgba(0, 0, 0, 0.8000)",
            "fontSize": 14,
            "includeFontPadding": false,
            "verticalAlign": "middle",
          },
          undefined,
          false,
          {
            "color": "rgba(0, 0, 0, 0.6000)",
          },
        ]
      }
    >
      label
    </Text>
  </View>
</View>
`;

exports[`TabItem component tests disabled: label, icon, badge 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  testID="TabItem_Container0"
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "rgba(255, 255, 255, 0.0001)",
          "flexDirection": "row",
          "gap": 7,
          "height": 49,
          "paddingHorizontal": 0,
          "paddingVertical": 14,
        },
        false,
        undefined,
        {
          "opacity": 0.6,
        },
      ]
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={17.5}
      bbWidth={17.5}
      fill="none"
      focusable={false}
      height={17.5}
      meetOrSlice={0}
      minX={0}
      minY={0}
      stroke="rgba(0, 0, 0, 0.6000)"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          {
            "flex": 0,
            "height": 17,
            "width": 17,
          },
        ]
      }
      vbHeight={24}
      vbWidth={24}
      width={17.5}
      xmlns="http://www.w3.org/2000/svg"
    >
      <RNSVGGroup
        fill={null}
        propList={
          [
            "fill",
            "stroke",
            "strokeWidth",
            "strokeLinecap",
            "strokeLinejoin",
          ]
        }
        stroke={
          {
            "payload": 2566914048,
            "type": 0,
          }
        }
        strokeLinecap={1}
        strokeLinejoin={1}
        strokeWidth={2}
      >
        <RNSVGPath
          d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0"
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 2566914048,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth={2}
        />
        <RNSVGPath
          d="M6 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2"
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 2566914048,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth={2}
        />
      </RNSVGGroup>
    </RNSVGSvgView>
    <Text
      numberOfLines={1}
      style={
        [
          {
            "color": "rgba(0, 0, 0, 0.8000)",
            "fontSize": 14,
            "includeFontPadding": false,
            "verticalAlign": "middle",
          },
          undefined,
          false,
          {
            "color": "rgba(0, 0, 0, 0.6000)",
          },
        ]
      }
    >
      label
    </Text>
    <View
      style={
        [
          {
            "alignItems": "flex-start",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          [
            {
              "borderRadius": 100,
              "height": 21,
              "justifyContent": "center",
              "paddingHorizontal": 7,
              "paddingVertical": 0,
            },
            {
              "backgroundColor": "#188700",
            },
          ]
        }
      >
        <Text
          style={
            {
              "color": "#ffffff",
              "fontSize": 10.5,
              "fontWeight": 700,
              "includeFontPadding": false,
              "verticalAlign": "middle",
            }
          }
        >
          99
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`TabItem component tests label 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  testID="TabItem_Container0"
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "rgba(255, 255, 255, 0.0001)",
          "flexDirection": "row",
          "gap": 7,
          "height": 49,
          "paddingHorizontal": 0,
          "paddingVertical": 14,
        },
        false,
        undefined,
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "color": "rgba(0, 0, 0, 0.8000)",
            "fontSize": 14,
            "includeFontPadding": false,
            "verticalAlign": "middle",
          },
          undefined,
          false,
          undefined,
        ]
      }
    >
      label
    </Text>
  </View>
</View>
`;

exports[`TabItem component tests label, badge 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  testID="TabItem_Container0"
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "rgba(255, 255, 255, 0.0001)",
          "flexDirection": "row",
          "gap": 7,
          "height": 49,
          "paddingHorizontal": 0,
          "paddingVertical": 14,
        },
        false,
        undefined,
        undefined,
      ]
    }
  >
    <Text
      numberOfLines={1}
      style={
        [
          {
            "color": "rgba(0, 0, 0, 0.8000)",
            "fontSize": 14,
            "includeFontPadding": false,
            "verticalAlign": "middle",
          },
          undefined,
          false,
          undefined,
        ]
      }
    >
      label
    </Text>
    <View
      style={
        [
          {
            "alignItems": "flex-start",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          [
            {
              "borderRadius": 100,
              "height": 21,
              "justifyContent": "center",
              "paddingHorizontal": 7,
              "paddingVertical": 0,
            },
            {
              "backgroundColor": "#188700",
            },
          ]
        }
      >
        <Text
          style={
            {
              "color": "#ffffff",
              "fontSize": 10.5,
              "fontWeight": 700,
              "includeFontPadding": false,
              "verticalAlign": "middle",
            }
          }
        >
          99
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`TabItem component tests label, icon 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  testID="TabItem_Container0"
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "rgba(255, 255, 255, 0.0001)",
          "flexDirection": "row",
          "gap": 7,
          "height": 49,
          "paddingHorizontal": 0,
          "paddingVertical": 14,
        },
        false,
        undefined,
        undefined,
      ]
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={17.5}
      bbWidth={17.5}
      fill="none"
      focusable={false}
      height={17.5}
      meetOrSlice={0}
      minX={0}
      minY={0}
      stroke="rgba(0, 0, 0, 0.8000)"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          {
            "flex": 0,
            "height": 17,
            "width": 17,
          },
        ]
      }
      vbHeight={24}
      vbWidth={24}
      width={17.5}
      xmlns="http://www.w3.org/2000/svg"
    >
      <RNSVGGroup
        fill={null}
        propList={
          [
            "fill",
            "stroke",
            "strokeWidth",
            "strokeLinecap",
            "strokeLinejoin",
          ]
        }
        stroke={
          {
            "payload": 3422552064,
            "type": 0,
          }
        }
        strokeLinecap={1}
        strokeLinejoin={1}
        strokeWidth={2}
      >
        <RNSVGPath
          d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0"
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 3422552064,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth={2}
        />
        <RNSVGPath
          d="M6 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2"
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 3422552064,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth={2}
        />
      </RNSVGGroup>
    </RNSVGSvgView>
    <Text
      numberOfLines={1}
      style={
        [
          {
            "color": "rgba(0, 0, 0, 0.8000)",
            "fontSize": 14,
            "includeFontPadding": false,
            "verticalAlign": "middle",
          },
          undefined,
          false,
          undefined,
        ]
      }
    >
      label
    </Text>
  </View>
</View>
`;

exports[`TabItem component tests label, icon, badge 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  testID="TabItem_Container0"
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "rgba(255, 255, 255, 0.0001)",
          "flexDirection": "row",
          "gap": 7,
          "height": 49,
          "paddingHorizontal": 0,
          "paddingVertical": 14,
        },
        false,
        undefined,
        undefined,
      ]
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={17.5}
      bbWidth={17.5}
      fill="none"
      focusable={false}
      height={17.5}
      meetOrSlice={0}
      minX={0}
      minY={0}
      stroke="rgba(0, 0, 0, 0.8000)"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          {
            "flex": 0,
            "height": 17,
            "width": 17,
          },
        ]
      }
      vbHeight={24}
      vbWidth={24}
      width={17.5}
      xmlns="http://www.w3.org/2000/svg"
    >
      <RNSVGGroup
        fill={null}
        propList={
          [
            "fill",
            "stroke",
            "strokeWidth",
            "strokeLinecap",
            "strokeLinejoin",
          ]
        }
        stroke={
          {
            "payload": 3422552064,
            "type": 0,
          }
        }
        strokeLinecap={1}
        strokeLinejoin={1}
        strokeWidth={2}
      >
        <RNSVGPath
          d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0"
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 3422552064,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth={2}
        />
        <RNSVGPath
          d="M6 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2"
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 3422552064,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth={2}
        />
      </RNSVGGroup>
    </RNSVGSvgView>
    <Text
      numberOfLines={1}
      style={
        [
          {
            "color": "rgba(0, 0, 0, 0.8000)",
            "fontSize": 14,
            "includeFontPadding": false,
            "verticalAlign": "middle",
          },
          undefined,
          false,
          undefined,
        ]
      }
    >
      label
    </Text>
    <View
      style={
        [
          {
            "alignItems": "flex-start",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          [
            {
              "borderRadius": 100,
              "height": 21,
              "justifyContent": "center",
              "paddingHorizontal": 7,
              "paddingVertical": 0,
            },
            {
              "backgroundColor": "#188700",
            },
          ]
        }
      >
        <Text
          style={
            {
              "color": "#ffffff",
              "fontSize": 10.5,
              "fontWeight": 700,
              "includeFontPadding": false,
              "verticalAlign": "middle",
            }
          }
        >
          99
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`TabPanel component tests activeIndex !== index 1`] = `null`;

exports[`TabPanel component tests activeIndex === index 1`] = `
<View>
  <Text>
    Content
  </Text>
</View>
`;

exports[`Tabs component tests disabled 1`] = `
<View
  style={
    {
      "borderBottomWidth": 1,
      "borderColor": "#dbdada",
      "flexDirection": "row",
      "gap": 21,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onLayout={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID="TabItem_Container0"
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 0.0001)",
            "flexDirection": "row",
            "gap": 7,
            "height": 49,
            "paddingHorizontal": 0,
            "paddingVertical": 14,
          },
          false,
          {
            "backgroundColor": "rgba(255, 255, 255, 0.0001)",
          },
          {
            "opacity": 0.6,
          },
        ]
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={17.5}
        bbWidth={17.5}
        fill="none"
        focusable={false}
        height={17.5}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke="rgba(0, 0, 0, 0.6000)"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "flex": 0,
              "height": 17,
              "width": 17,
            },
          ]
        }
        vbHeight={24}
        vbWidth={24}
        width={17.5}
        xmlns="http://www.w3.org/2000/svg"
      >
        <RNSVGGroup
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 2566914048,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth={2}
        >
          <RNSVGPath
            d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0"
            fill={null}
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "payload": 2566914048,
                "type": 0,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth={2}
          />
          <RNSVGPath
            d="M6 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2"
            fill={null}
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "payload": 2566914048,
                "type": 0,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth={2}
          />
        </RNSVGGroup>
      </RNSVGSvgView>
      <Text
        numberOfLines={1}
        style={
          [
            {
              "color": "rgba(0, 0, 0, 0.8000)",
              "fontSize": 14,
              "includeFontPadding": false,
              "verticalAlign": "middle",
            },
            {
              "color": "#188700",
            },
            false,
            {
              "color": "rgba(0, 0, 0, 0.6000)",
            },
          ]
        }
      >
        First Tab
      </Text>
    </View>
  </View>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onLayout={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID="TabItem_Container1"
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 0.0001)",
            "flexDirection": "row",
            "gap": 7,
            "height": 49,
            "paddingHorizontal": 0,
            "paddingVertical": 14,
          },
          false,
          false,
          {
            "opacity": 0.6,
          },
        ]
      }
    >
      <Text
        numberOfLines={1}
        style={
          [
            {
              "color": "rgba(0, 0, 0, 0.8000)",
              "fontSize": 14,
              "includeFontPadding": false,
              "verticalAlign": "middle",
            },
            false,
            false,
            {
              "color": "rgba(0, 0, 0, 0.6000)",
            },
          ]
        }
      >
        Second Tab
      </Text>
    </View>
  </View>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onLayout={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID="TabItem_Container2"
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 0.0001)",
            "flexDirection": "row",
            "gap": 7,
            "height": 49,
            "paddingHorizontal": 0,
            "paddingVertical": 14,
          },
          false,
          false,
          {
            "opacity": 0.6,
          },
        ]
      }
    >
      <Text
        numberOfLines={1}
        style={
          [
            {
              "color": "rgba(0, 0, 0, 0.8000)",
              "fontSize": 14,
              "includeFontPadding": false,
              "verticalAlign": "middle",
            },
            false,
            false,
            {
              "color": "rgba(0, 0, 0, 0.6000)",
            },
          ]
        }
      >
        Third Tab
      </Text>
      <View
        style={
          [
            {
              "alignItems": "flex-start",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "borderRadius": 100,
                "height": 21,
                "justifyContent": "center",
                "paddingHorizontal": 7,
                "paddingVertical": 0,
              },
              {
                "backgroundColor": "#e26e63",
              },
            ]
          }
        >
          <Text
            style={
              {
                "color": "#ffffff",
                "fontSize": 10.5,
                "fontWeight": 700,
                "includeFontPadding": false,
                "verticalAlign": "middle",
              }
            }
          >
            0
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    jestAnimatedStyle={
      {
        "value": {
          "left": 0,
          "width": 0,
        },
      }
    }
    style={
      {
        "backgroundColor": "#188700",
        "bottom": 0,
        "height": 3.5,
        "left": 0,
        "position": "absolute",
        "width": 0,
      }
    }
  />
</View>
`;

exports[`Tabs component tests normal 1`] = `
<View
  style={
    {
      "borderBottomWidth": 1,
      "borderColor": "#dbdada",
      "flexDirection": "row",
      "gap": 21,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onLayout={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID="TabItem_Container0"
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 0.0001)",
            "flexDirection": "row",
            "gap": 7,
            "height": 49,
            "paddingHorizontal": 0,
            "paddingVertical": 14,
          },
          false,
          {
            "backgroundColor": "rgba(255, 255, 255, 0.0001)",
          },
          false,
        ]
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight={17.5}
        bbWidth={17.5}
        fill="none"
        focusable={false}
        height={17.5}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke="#188700"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "flex": 0,
              "height": 17,
              "width": 17,
            },
          ]
        }
        vbHeight={24}
        vbWidth={24}
        width={17.5}
        xmlns="http://www.w3.org/2000/svg"
      >
        <RNSVGGroup
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 4279797504,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth={2}
        >
          <RNSVGPath
            d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0"
            fill={null}
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "payload": 4279797504,
                "type": 0,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth={2}
          />
          <RNSVGPath
            d="M6 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2"
            fill={null}
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "payload": 4279797504,
                "type": 0,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth={2}
          />
        </RNSVGGroup>
      </RNSVGSvgView>
      <Text
        numberOfLines={1}
        style={
          [
            {
              "color": "rgba(0, 0, 0, 0.8000)",
              "fontSize": 14,
              "includeFontPadding": false,
              "verticalAlign": "middle",
            },
            {
              "color": "#188700",
            },
            false,
            false,
          ]
        }
      >
        First Tab
      </Text>
    </View>
  </View>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onLayout={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID="TabItem_Container1"
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 0.0001)",
            "flexDirection": "row",
            "gap": 7,
            "height": 49,
            "paddingHorizontal": 0,
            "paddingVertical": 14,
          },
          false,
          false,
          false,
        ]
      }
    >
      <Text
        numberOfLines={1}
        style={
          [
            {
              "color": "rgba(0, 0, 0, 0.8000)",
              "fontSize": 14,
              "includeFontPadding": false,
              "verticalAlign": "middle",
            },
            false,
            false,
            false,
          ]
        }
      >
        Second Tab
      </Text>
    </View>
  </View>
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onLayout={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID="TabItem_Container2"
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 0.0001)",
            "flexDirection": "row",
            "gap": 7,
            "height": 49,
            "paddingHorizontal": 0,
            "paddingVertical": 14,
          },
          false,
          false,
          false,
        ]
      }
    >
      <Text
        numberOfLines={1}
        style={
          [
            {
              "color": "rgba(0, 0, 0, 0.8000)",
              "fontSize": 14,
              "includeFontPadding": false,
              "verticalAlign": "middle",
            },
            false,
            false,
            false,
          ]
        }
      >
        Third Tab
      </Text>
      <View
        style={
          [
            {
              "alignItems": "flex-start",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "borderRadius": 100,
                "height": 21,
                "justifyContent": "center",
                "paddingHorizontal": 7,
                "paddingVertical": 0,
              },
              {
                "backgroundColor": "#e26e63",
              },
            ]
          }
        >
          <Text
            style={
              {
                "color": "#ffffff",
                "fontSize": 10.5,
                "fontWeight": 700,
                "includeFontPadding": false,
                "verticalAlign": "middle",
              }
            }
          >
            0
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    jestAnimatedStyle={
      {
        "value": {
          "left": 0,
          "width": 0,
        },
      }
    }
    style={
      {
        "backgroundColor": "#188700",
        "bottom": 0,
        "height": 3.5,
        "left": 0,
        "position": "absolute",
        "width": 0,
      }
    }
  />
</View>
`;
