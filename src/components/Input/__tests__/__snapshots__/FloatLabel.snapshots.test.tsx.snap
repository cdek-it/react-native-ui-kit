// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FloatLabel snapshots focused/unfocused snapshots: focused 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={false}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "margin": 10,
    }
  }
  testID="FloatLabelPressableContainer"
>
  <InputTextBase
    accessibilityLabel="Label"
    containerStyle={
      {
        "height": 56,
      }
    }
    inputRef={
      {
        "current": null,
      }
    }
    inputStyle={
      {
        "paddingBottom": 13,
        "paddingTop": 26,
      }
    }
    onBlur={[Function]}
    onChangeText={[Function]}
    onFocus={[Function]}
    placeholder=""
    testID="FloatLabel"
    value=""
  />
  <Text
    collapsable={false}
    jestAnimatedStyle={
      {
        "value": {
          "color": "rgba(24, 135, 0, 1)",
          "fontSize": 10.5,
          "opacity": 1,
          "top": 10.5,
        },
      }
    }
    style={
      {
        "color": "rgba(0, 0, 0, 0.6)",
        "fontSize": 14,
        "includeFontPadding": false,
        "left": 10.5,
        "opacity": 0.6,
        "paddingHorizontal": 3.5,
        "position": "absolute",
        "top": 20,
        "verticalAlign": "middle",
      }
    }
    testID="FloatLabelPlaceholder"
  >
    Label
  </Text>
</View>
`;

exports[`FloatLabel snapshots focused/unfocused snapshots: unfocused 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={false}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "margin": 10,
    }
  }
  testID="FloatLabelPressableContainer"
>
  <InputTextBase
    accessibilityLabel="Label"
    containerStyle={
      {
        "height": 56,
      }
    }
    inputRef={
      {
        "current": null,
      }
    }
    inputStyle={
      {
        "paddingBottom": 13,
        "paddingTop": 26,
      }
    }
    onBlur={[Function]}
    onChangeText={[Function]}
    onFocus={[Function]}
    placeholder=""
    testID="FloatLabel"
    value=""
  />
  <Text
    collapsable={false}
    jestAnimatedStyle={
      {
        "value": {
          "color": "rgba(0, 0, 0, 0.6)",
          "fontSize": 14,
          "opacity": 0.6,
          "top": 20,
        },
      }
    }
    style={
      {
        "color": "rgba(0, 0, 0, 0.6)",
        "fontSize": 14,
        "includeFontPadding": false,
        "left": 10.5,
        "opacity": 0.6,
        "paddingHorizontal": 3.5,
        "position": "absolute",
        "top": 20,
        "verticalAlign": "middle",
      }
    }
    testID="FloatLabelPlaceholder"
  >
    Label
  </Text>
</View>
`;

exports[`FloatLabel snapshots unfocused with value snapshots, multiline, custom testID: focused with value 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={false}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "margin": 10,
    }
  }
  testID="CustomTestIdPressableContainer"
>
  <InputTextBase
    accessibilityLabel="Label"
    containerStyle={
      {
        "height": 120,
      }
    }
    inputRef={
      {
        "current": null,
      }
    }
    inputStyle={
      {
        "marginBottom": 13,
        "marginTop": 26,
        "paddingBottom": 0,
        "paddingTop": 0,
      }
    }
    multiline={true}
    onBlur={[Function]}
    onChangeText={[Function]}
    onFocus={[Function]}
    placeholder=""
    testID="CustomTestId"
    value="Value"
  />
  <Text
    collapsable={false}
    jestAnimatedStyle={
      {
        "value": {
          "color": "rgba(0, 0, 0, 0.6)",
          "fontSize": 10.5,
          "opacity": 1,
          "top": 10.5,
        },
      }
    }
    style={
      {
        "color": "rgba(0, 0, 0, 0.6)",
        "fontSize": 12.25,
        "includeFontPadding": false,
        "left": 10.5,
        "opacity": 1,
        "paddingHorizontal": 3.5,
        "position": "absolute",
        "top": 10.5,
        "verticalAlign": "middle",
      }
    }
    testID="CustomTestIdPlaceholder"
  >
    Label
  </Text>
</View>
`;
